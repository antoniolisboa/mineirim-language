// Syntactic Tree
digraph {
	"[0] init" [label="[0] init"]
	"[0] init" -> "[1] functionDeclaration" [constraint=true]
	"[1] functionDeclaration" [label="[1] functionDeclaration"]
	"[1] functionDeclaration" -> "[2] functionIndicator" [constraint=true]
	"[2] functionIndicator" [label="[2] functionIndicator"]
	"[2] functionIndicator" -> "[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)" [constraint=true]
	"[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)" [label="[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)"]
	"[1] functionDeclaration" -> "[4] dataType" [constraint=true]
	"[4] dataType" [label="[4] dataType"]
	"[4] dataType" -> "[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)" [constraint=true]
	"[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)" [label="[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)"]
	"[1] functionDeclaration" -> "[6] identifier" [constraint=true]
	"[6] identifier" [label="[6] identifier"]
	"[6] identifier" -> "[7] ('abc', 'IDENTIFIER', 12, 1, 24)" [constraint=true]
	"[7] ('abc', 'IDENTIFIER', 12, 1, 24)" [label="[7] ('abc', 'IDENTIFIER', 12, 1, 24)"]
	"[1] functionDeclaration" -> "[8] openParentheses" [constraint=true]
	"[8] openParentheses" [label="[8] openParentheses"]
	"[8] openParentheses" -> "[9] ('(', 'OP', 16, 1, 25)" [constraint=true]
	"[9] ('(', 'OP', 16, 1, 25)" [label="[9] ('(', 'OP', 16, 1, 25)"]
	"[1] functionDeclaration" -> "[10] closeParentheses" [constraint=true]
	"[10] closeParentheses" [label="[10] closeParentheses"]
	"[10] closeParentheses" -> "[11] (')', 'CP', 17, 1, 26)" [constraint=true]
	"[11] (')', 'CP', 17, 1, 26)" [label="[11] (')', 'CP', 17, 1, 26)"]
	"[1] functionDeclaration" -> "[12] openKey" [constraint=true]
	"[12] openKey" [label="[12] openKey"]
	"[12] openKey" -> "[13] ('{', 'OK', 18, 1, 28)" [constraint=true]
	"[13] ('{', 'OK', 18, 1, 28)" [label="[13] ('{', 'OK', 18, 1, 28)"]
	"[1] functionDeclaration" -> "[14] functionReturn" [constraint=true]
	"[14] functionReturn" [label="[14] functionReturn"]
	"[14] functionReturn" -> "[15] giveBack" [constraint=true]
	"[15] giveBack" [label="[15] giveBack"]
	"[15] giveBack" -> "[16] ('CascaFora', 'RESERVED WORD', 5, 2, 13)" [constraint=true]
	"[16] ('CascaFora', 'RESERVED WORD', 5, 2, 13)" [label="[16] ('CascaFora', 'RESERVED WORD', 5, 2, 13)"]
	"[14] functionReturn" -> "[17] logicExpression" [constraint=true]
	"[17] logicExpression" [label="[17] logicExpression"]
	"[17] logicExpression" -> "[18] expression" [constraint=true]
	"[18] expression" [label="[18] expression"]
	"[18] expression" -> "[19] relation" [constraint=true]
	"[19] relation" [label="[19] relation"]
	"[19] relation" -> "[20] mathExpression" [constraint=true]
	"[20] mathExpression" [label="[20] mathExpression"]
	"[20] mathExpression" -> "[21] term" [constraint=true]
	"[21] term" [label="[21] term"]
	"[21] term" -> "[22] fator" [constraint=true]
	"[22] fator" [label="[22] fator"]
	"[22] fator" -> "[23] number" [constraint=true]
	"[23] number" [label="[23] number"]
	"[23] number" -> "[24] ('1', 'INTEGER', 13, 2, 15)" [constraint=true]
	"[24] ('1', 'INTEGER', 13, 2, 15)" [label="[24] ('1', 'INTEGER', 13, 2, 15)"]
	"[14] functionReturn" -> "[25] end" [constraint=true]
	"[25] end" [label="[25] end"]
	"[25] end" -> "[26] (';', 'END', 35, 2, 16)" [constraint=true]
	"[26] (';', 'END', 35, 2, 16)" [label="[26] (';', 'END', 35, 2, 16)"]
	"[1] functionDeclaration" -> "[27] closeKey" [constraint=true]
	"[27] closeKey" [label="[27] closeKey"]
	"[27] closeKey" -> "[28] ('}', 'CK', 19, 3, 1)" [constraint=true]
	"[28] ('}', 'CK', 19, 3, 1)" [label="[28] ('}', 'CK', 19, 3, 1)"]
	"[0] init" -> "[29] mainFunction" [constraint=true]
	"[29] mainFunction" [label="[29] mainFunction"]
	"[29] mainFunction" -> "[30] main" [constraint=true]
	"[30] main" [label="[30] main"]
	"[30] main" -> "[31] ('Uai', 'RESERVED WORD', 0, 5, 3)" [constraint=true]
	"[31] ('Uai', 'RESERVED WORD', 0, 5, 3)" [label="[31] ('Uai', 'RESERVED WORD', 0, 5, 3)"]
	"[29] mainFunction" -> "[32] openParentheses" [constraint=true]
	"[32] openParentheses" [label="[32] openParentheses"]
	"[32] openParentheses" -> "[33] ('(', 'OP', 16, 5, 4)" [constraint=true]
	"[33] ('(', 'OP', 16, 5, 4)" [label="[33] ('(', 'OP', 16, 5, 4)"]
	"[29] mainFunction" -> "[34] closeParentheses" [constraint=true]
	"[34] closeParentheses" [label="[34] closeParentheses"]
	"[34] closeParentheses" -> "[35] (')', 'CP', 17, 5, 5)" [constraint=true]
	"[35] (')', 'CP', 17, 5, 5)" [label="[35] (')', 'CP', 17, 5, 5)"]
	"[29] mainFunction" -> "[36] openKey" [constraint=true]
	"[36] openKey" [label="[36] openKey"]
	"[36] openKey" -> "[37] ('{', 'OK', 18, 5, 7)" [constraint=true]
	"[37] ('{', 'OK', 18, 5, 7)" [label="[37] ('{', 'OK', 18, 5, 7)"]
	"[29] mainFunction" -> "[38] content" [constraint=true]
	"[38] content" [label="[38] content"]
	"[38] content" -> "[39] variableDeclaration" [constraint=true]
	"[39] variableDeclaration" [label="[39] variableDeclaration"]
	"[39] variableDeclaration" -> "[40] dataType" [constraint=true]
	"[40] dataType" [label="[40] dataType"]
	"[40] dataType" -> "[41] ('Cabuloso', 'RESERVED WORD', 7, 6, 12)" [constraint=true]
	"[41] ('Cabuloso', 'RESERVED WORD', 7, 6, 12)" [label="[41] ('Cabuloso', 'RESERVED WORD', 7, 6, 12)"]
	"[39] variableDeclaration" -> "[42] identifier" [constraint=true]
	"[42] identifier" [label="[42] identifier"]
	"[42] identifier" -> "[43] ('a', 'IDENTIFIER', 12, 6, 14)" [constraint=true]
	"[43] ('a', 'IDENTIFIER', 12, 6, 14)" [label="[43] ('a', 'IDENTIFIER', 12, 6, 14)"]
	"[39] variableDeclaration" -> "[44] assignment" [constraint=true]
	"[44] assignment" [label="[44] assignment"]
	"[44] assignment" -> "[45] ('=', 'ASSIGNMENT', 33, 6, 16)" [constraint=true]
	"[45] ('=', 'ASSIGNMENT', 33, 6, 16)" [label="[45] ('=', 'ASSIGNMENT', 33, 6, 16)"]
	"[39] variableDeclaration" -> "[46] logicExpression" [constraint=true]
	"[46] logicExpression" [label="[46] logicExpression"]
	"[46] logicExpression" -> "[47] expression" [constraint=true]
	"[47] expression" [label="[47] expression"]
	"[47] expression" -> "[48] relation" [constraint=true]
	"[48] relation" [label="[48] relation"]
	"[48] relation" -> "[49] mathExpression" [constraint=true]
	"[49] mathExpression" [label="[49] mathExpression"]
	"[49] mathExpression" -> "[50] term" [constraint=true]
	"[50] term" [label="[50] term"]
	"[50] term" -> "[51] fator" [constraint=true]
	"[51] fator" [label="[51] fator"]
	"[51] fator" -> "[52] functionCall" [constraint=true]
	"[52] functionCall" [label="[52] functionCall"]
	"[52] functionCall" -> "[53] identifier" [constraint=true]
	"[53] identifier" [label="[53] identifier"]
	"[53] identifier" -> "[54] ('abc', 'IDENTIFIER', 12, 6, 20)" [constraint=true]
	"[54] ('abc', 'IDENTIFIER', 12, 6, 20)" [label="[54] ('abc', 'IDENTIFIER', 12, 6, 20)"]
	"[52] functionCall" -> "[55] openParentheses" [constraint=true]
	"[55] openParentheses" [label="[55] openParentheses"]
	"[55] openParentheses" -> "[56] ('(', 'OP', 16, 6, 21)" [constraint=true]
	"[56] ('(', 'OP', 16, 6, 21)" [label="[56] ('(', 'OP', 16, 6, 21)"]
	"[52] functionCall" -> "[57] parameterPassing" [constraint=true]
	"[57] parameterPassing" [label="[57] parameterPassing"]
	"[57] parameterPassing" -> "[58] logicExpression" [constraint=true]
	"[58] logicExpression" [label="[58] logicExpression"]
	"[58] logicExpression" -> "[59] expression" [constraint=true]
	"[59] expression" [label="[59] expression"]
	"[59] expression" -> "[60] relation" [constraint=true]
	"[60] relation" [label="[60] relation"]
	"[60] relation" -> "[61] mathExpression" [constraint=true]
	"[61] mathExpression" [label="[61] mathExpression"]
	"[61] mathExpression" -> "[62] term" [constraint=true]
	"[62] term" [label="[62] term"]
	"[62] term" -> "[63] fator" [constraint=true]
	"[63] fator" [label="[63] fator"]
	"[63] fator" -> "[64] number" [constraint=true]
	"[64] number" [label="[64] number"]
	"[64] number" -> "[65] ('1', 'INTEGER', 13, 6, 22)" [constraint=true]
	"[65] ('1', 'INTEGER', 13, 6, 22)" [label="[65] ('1', 'INTEGER', 13, 6, 22)"]
	"[59] expression" -> "[66] comparisionOperator" [constraint=true]
	"[66] comparisionOperator" [label="[66] comparisionOperator"]
	"[66] comparisionOperator" -> "[67] ('>', 'GT', 31, 6, 23)" [constraint=true]
	"[67] ('>', 'GT', 31, 6, 23)" [label="[67] ('>', 'GT', 31, 6, 23)"]
	"[59] expression" -> "[68] relation" [constraint=true]
	"[68] relation" [label="[68] relation"]
	"[68] relation" -> "[69] mathExpression" [constraint=true]
	"[69] mathExpression" [label="[69] mathExpression"]
	"[69] mathExpression" -> "[70] term" [constraint=true]
	"[70] term" [label="[70] term"]
	"[70] term" -> "[71] fator" [constraint=true]
	"[71] fator" [label="[71] fator"]
	"[71] fator" -> "[72] number" [constraint=true]
	"[72] number" [label="[72] number"]
	"[72] number" -> "[73] ('1', 'INTEGER', 13, 6, 24)" [constraint=true]
	"[73] ('1', 'INTEGER', 13, 6, 24)" [label="[73] ('1', 'INTEGER', 13, 6, 24)"]
	"[52] functionCall" -> "[74] closeParentheses" [constraint=true]
	"[74] closeParentheses" [label="[74] closeParentheses"]
	"[74] closeParentheses" -> "[75] (')', 'CP', 17, 6, 25)" [constraint=true]
	"[75] (')', 'CP', 17, 6, 25)" [label="[75] (')', 'CP', 17, 6, 25)"]
	"[39] variableDeclaration" -> "[76] end" [constraint=true]
	"[76] end" [label="[76] end"]
	"[76] end" -> "[77] (';', 'END', 35, 6, 26)" [constraint=true]
	"[77] (';', 'END', 35, 6, 26)" [label="[77] (';', 'END', 35, 6, 26)"]
	"[29] mainFunction" -> "[78] closeKey" [constraint=true]
	"[78] closeKey" [label="[78] closeKey"]
	"[78] closeKey" -> "[79] ('}', 'CK', 19, 7, 1)" [constraint=true]
	"[79] ('}', 'CK', 19, 7, 1)" [label="[79] ('}', 'CK', 19, 7, 1)"]
}
