// Syntactic Tree
digraph {
	"[0] init" [label="[0] init"]
	"[0] init" -> "[1] functionDeclaration" [constraint=true]
	"[1] functionDeclaration" [label="[1] functionDeclaration"]
	"[1] functionDeclaration" -> "[2] functionIndicator" [constraint=true]
	"[2] functionIndicator" [label="[2] functionIndicator"]
	"[2] functionIndicator" -> "[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)" [constraint=true]
	"[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)" [label="[3] ('InventaModa', 'RESERVED WORD', 1, 1, 11)"]
	"[1] functionDeclaration" -> "[4] dataType" [constraint=true]
	"[4] dataType" [label="[4] dataType"]
	"[4] dataType" -> "[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)" [constraint=true]
	"[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)" [label="[5] ('Cabuloso', 'RESERVED WORD', 7, 1, 20)"]
	"[1] functionDeclaration" -> "[6] identifier" [constraint=true]
	"[6] identifier" [label="[6] identifier"]
	"[6] identifier" -> "[7] ('soma', 'IDENTIFIER', 12, 1, 25)" [constraint=true]
	"[7] ('soma', 'IDENTIFIER', 12, 1, 25)" [label="[7] ('soma', 'IDENTIFIER', 12, 1, 25)"]
	"[1] functionDeclaration" -> "[8] openParentheses" [constraint=true]
	"[8] openParentheses" [label="[8] openParentheses"]
	"[8] openParentheses" -> "[9] ('(', 'OP', 16, 1, 26)" [constraint=true]
	"[9] ('(', 'OP', 16, 1, 26)" [label="[9] ('(', 'OP', 16, 1, 26)"]
	"[1] functionDeclaration" -> "[10] closeParentheses" [constraint=true]
	"[10] closeParentheses" [label="[10] closeParentheses"]
	"[10] closeParentheses" -> "[11] (')', 'CP', 17, 1, 27)" [constraint=true]
	"[11] (')', 'CP', 17, 1, 27)" [label="[11] (')', 'CP', 17, 1, 27)"]
	"[1] functionDeclaration" -> "[12] openKey" [constraint=true]
	"[12] openKey" [label="[12] openKey"]
	"[12] openKey" -> "[13] ('{', 'OK', 18, 1, 29)" [constraint=true]
	"[13] ('{', 'OK', 18, 1, 29)" [label="[13] ('{', 'OK', 18, 1, 29)"]
	"[1] functionDeclaration" -> "[14] closeKey" [constraint=true]
	"[14] closeKey" [label="[14] closeKey"]
	"[14] closeKey" -> "[15] ('}', 'CK', 19, 1, 30)" [constraint=true]
	"[15] ('}', 'CK', 19, 1, 30)" [label="[15] ('}', 'CK', 19, 1, 30)"]
	"[0] init" -> "[16] mainFunction" [constraint=true]
	"[16] mainFunction" [label="[16] mainFunction"]
	"[16] mainFunction" -> "[17] main" [constraint=true]
	"[17] main" [label="[17] main"]
	"[17] main" -> "[18] ('Uai', 'RESERVED WORD', 0, 3, 3)" [constraint=true]
	"[18] ('Uai', 'RESERVED WORD', 0, 3, 3)" [label="[18] ('Uai', 'RESERVED WORD', 0, 3, 3)"]
	"[16] mainFunction" -> "[19] openParentheses" [constraint=true]
	"[19] openParentheses" [label="[19] openParentheses"]
	"[19] openParentheses" -> "[20] ('(', 'OP', 16, 3, 4)" [constraint=true]
	"[20] ('(', 'OP', 16, 3, 4)" [label="[20] ('(', 'OP', 16, 3, 4)"]
	"[16] mainFunction" -> "[21] closeParentheses" [constraint=true]
	"[21] closeParentheses" [label="[21] closeParentheses"]
	"[21] closeParentheses" -> "[22] (')', 'CP', 17, 3, 5)" [constraint=true]
	"[22] (')', 'CP', 17, 3, 5)" [label="[22] (')', 'CP', 17, 3, 5)"]
	"[16] mainFunction" -> "[23] openKey" [constraint=true]
	"[23] openKey" [label="[23] openKey"]
	"[23] openKey" -> "[24] ('{', 'OK', 18, 3, 7)" [constraint=true]
	"[24] ('{', 'OK', 18, 3, 7)" [label="[24] ('{', 'OK', 18, 3, 7)"]
	"[16] mainFunction" -> "[25] content" [constraint=true]
	"[25] content" [label="[25] content"]
	"[25] content" -> "[26] variableDeclaration" [constraint=true]
	"[26] variableDeclaration" [label="[26] variableDeclaration"]
	"[26] variableDeclaration" -> "[27] dataType" [constraint=true]
	"[27] dataType" [label="[27] dataType"]
	"[27] dataType" -> "[28] ('Cabuloso', 'RESERVED WORD', 7, 4, 12)" [constraint=true]
	"[28] ('Cabuloso', 'RESERVED WORD', 7, 4, 12)" [label="[28] ('Cabuloso', 'RESERVED WORD', 7, 4, 12)"]
	"[26] variableDeclaration" -> "[29] identifier" [constraint=true]
	"[29] identifier" [label="[29] identifier"]
	"[29] identifier" -> "[30] ('a', 'IDENTIFIER', 12, 4, 14)" [constraint=true]
	"[30] ('a', 'IDENTIFIER', 12, 4, 14)" [label="[30] ('a', 'IDENTIFIER', 12, 4, 14)"]
	"[26] variableDeclaration" -> "[31] end" [constraint=true]
	"[31] end" [label="[31] end"]
	"[31] end" -> "[32] (';', 'END', 35, 4, 15)" [constraint=true]
	"[32] (';', 'END', 35, 4, 15)" [label="[32] (';', 'END', 35, 4, 15)"]
	"[25] content" -> "[33] variableDeclaration" [constraint=true]
	"[33] variableDeclaration" [label="[33] variableDeclaration"]
	"[33] variableDeclaration" -> "[34] dataType" [constraint=true]
	"[34] dataType" [label="[34] dataType"]
	"[34] dataType" -> "[35] ('Trem', 'RESERVED WORD', 8, 5, 8)" [constraint=true]
	"[35] ('Trem', 'RESERVED WORD', 8, 5, 8)" [label="[35] ('Trem', 'RESERVED WORD', 8, 5, 8)"]
	"[33] variableDeclaration" -> "[36] identifier" [constraint=true]
	"[36] identifier" [label="[36] identifier"]
	"[36] identifier" -> "[37] ('b', 'IDENTIFIER', 12, 5, 10)" [constraint=true]
	"[37] ('b', 'IDENTIFIER', 12, 5, 10)" [label="[37] ('b', 'IDENTIFIER', 12, 5, 10)"]
	"[33] variableDeclaration" -> "[38] assignment" [constraint=true]
	"[38] assignment" [label="[38] assignment"]
	"[38] assignment" -> "[39] ('=', 'ASSIGNMENT', 33, 5, 12)" [constraint=true]
	"[39] ('=', 'ASSIGNMENT', 33, 5, 12)" [label="[39] ('=', 'ASSIGNMENT', 33, 5, 12)"]
	"[33] variableDeclaration" -> "[40] string" [constraint=true]
	"[40] string" [label="[40] string"]
	"[40] string" -> "[41] ('\"\"', 'STRING', 15, 5, 15)" [constraint=true]
	"[41] ('\"\"', 'STRING', 15, 5, 15)" [label="[41] ('\"\"', 'STRING', 15, 5, 15)"]
	"[33] variableDeclaration" -> "[42] end" [constraint=true]
	"[42] end" [label="[42] end"]
	"[42] end" -> "[43] (';', 'END', 35, 5, 16)" [constraint=true]
	"[43] (';', 'END', 35, 5, 16)" [label="[43] (';', 'END', 35, 5, 16)"]
	"[16] mainFunction" -> "[44] closeKey" [constraint=true]
	"[44] closeKey" [label="[44] closeKey"]
	"[44] closeKey" -> "[45] ('}', 'CK', 19, 6, 1)" [constraint=true]
	"[45] ('}', 'CK', 19, 6, 1)" [label="[45] ('}', 'CK', 19, 6, 1)"]
}
